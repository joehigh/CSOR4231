\documentclass[twoside,11pt]{homework}

\coursename{CSOR W4231 Analysis of Algorithms I - Spring 2021} 

\studname{Joseph High}
\studmail{jph2185}
\hwNo{3}
\date{\today} 

% Uncomment the next line if you want to use \includegraphics.
%\usepackage{graphicx}
\usepackage{graphicx}
%\usepackage{fancyhdr}
\usepackage{enumerate}
\usepackage{amsmath}
\usepackage{xfrac}
\usepackage{relsize}
\usepackage{mathtools}
\usepackage{xfrac}
\usepackage{dsfont}
\usepackage[dvipsnames]{xcolor}
\usepackage[makeroom]{cancel}
\usepackage{collectbox}
\usepackage{placeins}
%\usepackage{cleveref}
\usepackage{eqnarray}
%\usepackage{titlesec} 
\usepackage{bm} 
\usepackage{bbm}
\usepackage{hyperref}
\usepackage{flafter}
\usepackage{graphicx}
\usepackage{float}
\usepackage{algorithm}
%\usepackage{algorithmic}
\usepackage{algorithmicx}
\usepackage{algpseudocode}
\usepackage{subfig}
\usepackage{soul}

\algdef{SE}[DOWHILE]{Do}{doWhile}{\algorithmicdo}[1]{\algorithmicwhile\ #1}%
\newcolumntype{M}[1]{>{\centering\arraybackslash}m{#1}}

\algdef{SE}[DOWHILE]{Do}{doWhile}{\algorithmicdo}[1]{\algorithmicwhile\ #1}%

\newcommand\NoDo{\renewcommand\algorithmicdo{}}
\newcommand\ReDo{\renewcommand\algorithmicdo{\textbf{do}}}
\newcommand\NoThen{\renewcommand\algorithmicthen{}}
\newcommand\ReThen{\renewcommand\algorithmicthen{\textbf{then}}}
\newcommand\NoEnd{\renewcommand\algorithmicend{}}
\newcommand\NoFor{\renewcommand\algorithmicfor{}}
\newcommand\NoProc{\renewcommand\algorithmicprocedure{}}
\newcommand\NoIf{\renewcommand\algorithmicif{}}



\newcommand{\commentsymbol}{{\color{blue} //}}% or \% or $\triangleright$
\algrenewcommand\algorithmiccomment[1]{\hfill \commentsymbol{} #1}
\makeatletter
\newcommand{\LineComment}[2][\algorithmicindent]{\Statex \hspace{#1}\commentsymbol{} #2}
\makeatother
\newcommand{\varfont}{\texttt}

%\renewcommand*{\proofname}{Proof of Claim:}

\begin{document}
\maketitle

%% PROBLEM ONE
\section*{Problem 1}
%Construct a modified BFS algorithm on $G$ starting from the node $s$ such that the algorithm records the number of nodes in each layer.  Search for a layer at level $k \in \{1,  \dots n/2\}$ with exactly one node.  Return the node contained within this layer. \\


%\noindent
%\underline{Pseudocode}:
%\begin{algorithm}
%%\caption{Find $v$ such that deleting $v$ destroys all $s-t$ paths, where $dist(s, t) > n/2$}\label{searchanddestroy}
%\begin{algorithmic}[1]
%\NoProc
%\Procedure{SearchAndDestroy}{$G,  s$}
%%   \State $L = $ \Call{BFS-Modified}{$G,s, t$}
%%   \For{$i = 1$ \textbf{to} $n/2$}:
%%   \If{$length(L[i]) == 1$}:
%%   \State $v = L[i][0]$
%%   \State \textbf{break}
%%   \EndIf
%%   \EndFor
%   \State $BFS = $ \Call{BFS-Modified}{$G,s$}
%   \For{$u \in G$}:
%   \If{$BFS.dist[u] < n/2$ \textbf{and} $u.length(L[i]) == 1$}:
%   \State $v = u$
%   \State \textbf{break}
%   \EndIf
%   \EndFor
%   \State \Return $v$
%\EndProcedure \\
%
%\Procedure{BFS-Modified}{$G = (V, E)$,  $s$}  \Comment{{\color{blue} Only the modified portion shown}} \\
% {\color{gray} //Add the following above the while-loop in the original BFS pseudocode}
% \State $n = size(V)$   \Comment{{\color{blue} Define number of nodes in $G$. Running time: $O(1)$}}
%  \State $L = [  \ ]$  \Comment{{\color{blue} Initialize array for each layer. Running time: $O(n)$}}
%   \State $L[0] = s$ \\
%  \\
%  {\color{gray} //Add the following to the while-loop \& above the for-loop in the BFS pseudocode}
%  \For{$i = 1$ \textbf{to} $length(L)$}:
%  \State $L[i] = G.neighbor[u]$  \Comment{{\color{blue} Store all neighbors of $u$ in layer $L_i$}}
%  \EndFor
%   \State \Return $L$
%\EndProcedure
%\end{algorithmic}
%\end{algorithm}


\noindent
\underline{Running Time}:   \\



\noindent
\underline{Correctness}:   \\


%% PROBLEM TWO
\section*{Problem 2}



\noindent
\underline{Pseudocode}:
\begin{algorithm}
\begin{algorithmic}[1]
\NoProc
\Procedure{Q2\_Algorithm}{$G = (V, E)$}  
\State Run \texttt{DFS}$(G)$;  compute $finish(u)$ for all $u \in V$.   \Comment{{\color{blue}  $O(n + m)$}}
\State Compute $\max_{u \in V} finish(u)$, and   \Comment{{\color{blue}  $O(n)$}}
\item[]  \ \ \ \ \ \ \ \ \ define $v^* = \max_{u \in V} finish(u)$ 
\State Run \texttt{BFS}$(G, v^*)$;  record all vertices explored in BFS \Comment{{\color{blue} $O(n + m)$}}
\State Output all vertices discovered in BFS, and 
\item[]  \ \ \ \ \ \ \ \ \ define $V_{BFS} = \{w \in V : w$ discovered in \texttt{BFS}$(G, v^*) \}$
\NoThen
 \If{$size(V_{BFS}) \texttt{ == } size(V)$}:
\State \Return \texttt{`True'}
\Else: 
\State \Return \texttt{`False'}
\EndIf
\EndProcedure
\end{algorithmic}
\end{algorithm}



\noindent
\underline{Running Time}:   \\




\noindent
\underline{Correctness}:    \\






%% PROBLEM THREE
\section*{Problem 3}
Construct a modified version of Dijkstra's algorithm such that it accounts for both the edge weights and the vertex costs.  In particular,  for each $(u, v) \in E$ where $u \in S$ and $v \in V - S$,  pick $v$ such that $dist[u] + w_{uv} + c_v$ is a minimum among all nodes in $V-S$.  In particular,  modify the \texttt{Update} function such that $dist[v]$ maintains the minimum  \\

 ... also need to initialize $dist[s] = c_s$ ...\\

\noindent
\hl{Equivalently,  construct a new graph $G'$ from $G$ where the weight of each edge in $G'$ is the sum of the original edge weight in $G$ plus the cost of each of its respective end point vertices.  Running Dijkstra's algorithm using only the updated edge weights gives the shortest path. } \\

\noindent
\underline{Pseudocode}:
\begin{algorithm}
\begin{algorithmic}[1]
\NoProc
\Procedure{Dijkstra-Modified}{$G = (V, E, w, c)$}  
\Procedure{\texttt{Update}}{$u, v$}
\If{$dist[v] > dist[u] + w_{uv} + c_v$}
\State $dist[v] = dist[u] + w_{uv} + c_v$
\State $prev[v] = u$
\EndIf
\EndProcedure
\EndProcedure
\end{algorithmic}
\end{algorithm}


\noindent
\underline{Running Time}:   The running time is the same as the running time of Dijkstra's algorithm. That is, the run time is $O(n \log n + m \log n)$.  \\

\noindent
\underline{Correctness}:    \\


%% PROBLEM FOUR
\section*{Problem 4}




\noindent
\underline{Running Time}:    \\



\noindent
\underline{Correctness}:     \\



%% PROBLEM FIVE
\section*{Problem 5}



\noindent
\underline{Running Time}:     \\



\noindent
\underline{Correctness}:        \\




\end{document}